#ifndef MYLISPC_TOKEN_H
#define MYLISPC_TOKEN_H

#include"zlt/string.h"

#include"zlt/ifcpp_begin.h"

enum {
  MYLISPC_EOF_TOKEN,
  MYLISPC_ID_TOKEN,
  MYLISPC_NUM_TOKEN,
  MYLISPC_STR_TOKEN,
  MYLISPC_KWD_TOKEN = 0x100,
  MYLISPC_callee_TOKEN,
  MYLISPC_def_TOKEN,
  MYLISPC_defer_TOKEN,
  MYLISPC_forward_TOKEN,
  MYLISPC_guard_TOKEN,
  MYLISPC_if_TOKEN,
  MYLISPC_length_TOKEN,
  MYLISPC_return_TOKEN,
  MYLISPC_throw_TOKEN,
  MYLISPC_try_TOKEN,
  MYLISPC_PREPROC_TOKEN = 0x200,
  MYLISPC_POUND_TOKEN,
  MYLISPC_POUND2_TOKEN,
  MYLISPC_POUND_def_TOKEN,
  MYLISPC_POUND_if_TOKEN,
  MYLISPC_POUND_include_TOKEN,
  MYLISPC_POUND_movedef_TOKEN,
  MYLISPC_POUND_undef_TOKEN,
  MYLISPC_SYMBOL_TOKEN = 0x300,
  MYLISPC_EXCLAM_TOKEN,
  MYLISPC_PERCENT_TOKEN,
  MYLISPC_AMP2_TOKEN,
  MYLISPC_AMP_TOKEN,
  MYLISPC_LPAREN_TOKEN,
  MYLISPC_RPAREN_TOKEN,
  MYLISPC_ASTERISK2_TOKEN,
  MYLISPC_ASTERISK_TOKEN,
  MYLISPC_PLUS_TOKEN,
  MYLISPC_COMMA_TOKEN,
  MYLISPC_MINUS_TOKEN,
  MYLISPC_DOT_TOKEN,
  MYLISPC_SLASH_TOKEN,
  MYLISPC_LT2_TOKEN,
  MYLISPC_LT_EQ_GT_TOKEN,
  MYLISPC_LT_EQ_TOKEN,
  MYLISPC_LT_TOKEN,
  MYLISPC_EQ2_TOKEN,
  MYLISPC_EQ_TOKEN,
  MYLISPC_GT_EQ_TOKEN,
  MYLISPC_GT3_TOKEN,
  MYLISPC_GT2_TOKEN,
  MYLISPC_GT_TOKEN,
  MYLISPC_AT_TOKEN,
  MYLISPC_CARET2_TOKEN,
  MYLISPC_CARET_TOKEN,
  MYLISPC_VERTICAL2_TOKEN,
  MYLISPC_VERTICAL_TOKEN,
  MYLISPC_TILDE_TOKEN
};

zltString mylispcTokenRaw(int token);

/// @return -1 when bad
int mylispcRawToken(double *numval, zltString raw);

#include"zlt/ifcpp_end.h"

#endif
